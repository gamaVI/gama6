import { type NextPage } from "next";
import { useState, useEffect } from "react";
import Head from "next/head";
import Link from "next/link";
import {
  signIn,
  signOut,
  getProviders,
  useSession,
  type ClientSafeProvider,
  type LiteralUnion,
} from "next-auth/react";
import { type BuiltInProviderType } from "next-auth/providers";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const [providers, setProviders] = useState<Record<
    LiteralUnion<BuiltInProviderType, string>,
    ClientSafeProvider
  > | null>();
  const { data: sessionData } = useSession();

  useEffect(() => {
    const fetchProviders = async () => {
      const providers = await getProviders();
      setProviders(providers);
    };
    void fetchProviders();
  }, []);

  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Gama<span className="text-[hsl(280,100%,70%)]">6</span>
          </h1>

          <div className="flex flex-col items-center gap-2">
            <p className="text-center text-2xl  text-white">
              {sessionData && (
                <>
                  <span className="">
                    Pozdravljen {sessionData.user?.name}{" "}
                  </span>
                  <div className="mt-5 flex flex-row gap-5 ">
                    <Link
                      href="/apitesting"
                      className=" rounded-xl   bg-pink-500 px-4 py-2 text-lg font-semibold text-white hover:bg-white hover:text-pink-500"
                    >
                      Testiraj API
                    </Link>
                    <button
                      className=" rounded-xl   bg-pink-500 px-4 py-2 text-lg font-semibold text-white hover:bg-white hover:text-pink-500"
                      onClick={() => void signOut()}
                    >
                      Odjavi se
                    </button>
                  </div>
                </>
              )}
            </p>

            {!sessionData && providers?.auth0 && (
              <button
                className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
                onClick={() => void signIn(providers.auth0.id)}
              >
                Prijava
              </button>
            )}
            {/*
              <AuthShowcase />
              */}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
