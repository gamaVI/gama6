import { type NextPage } from "next";
import { useState, useEffect } from "react";
import Head from "next/head";
import Link from "next/link";
import {
  signIn,
  signOut,
  getProviders,
  useSession,
  type ClientSafeProvider,
  type LiteralUnion,
} from "next-auth/react";
import { type BuiltInProviderType } from "next-auth/providers";
import { Button } from "@/components/ui/button";
const Home: NextPage = () => {
    
  const [providers, setProviders] = useState<Record<
    LiteralUnion<BuiltInProviderType, string>,
    ClientSafeProvider
  > | null>();
   const { data: sessionData } = useSession();

  useEffect(() => {
    const fetchProviders = async () => {
      const providers = await getProviders();
      setProviders(providers);
    };
    void fetchProviders();
  }, []);


  return (
    <>
      <Head>
        <title>Gama6</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
          üèòÔ∏èGama<span className="text-[hsl(280,100%,70%)]">6</span>
          </h1>

          <div className="flex flex-col items-center gap-2">
            <p className="text-center text-2xl  text-white">
               
                 {sessionData && (
                    <>
                      <span className="">
                        Pozdravljen {sessionData.user?.name}{" "}
                      </span>
                      <div className="mt-5 flex flex-row gap-5 ">
                        <Button>
                        <Link
                          href="/dashboard"
                        >
                          Nadaljuj z uporabo
                        </Link>
                        </Button>
                       
                        <Button
                        variant={"outline"}
                          onClick={() => void signOut()}
                        >
                          Odjavi se
                        </Button>
                      </div>
                    </>
                  )}
                </p>
                {!sessionData && providers?.auth0 && (
                  <Button
                  variant={"outline"}
                    onClick={() => void signIn(providers.auth0.id)}
                  >
                    Prijava
                  </Button>
                )}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

